@model NexusCommunicationSystem.Models.Contract

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    var numberOfBillingEachYear = ViewBag.NumberOfBillingEachYear;
}




<h2>Billing</h2>
<div class="form-horizontal">
    
    <div class="col-5">
        <h4>Contract</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id, new { @id = "contractId" })

        <div class="form-group">
            <label class="control-label col-md-2">Order Status</label>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.OrderStatus, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Created At</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Updated At</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            </div>
        </div>



        <div class="form-group">
            <label class="control-label col-md-2">Next Payment At</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NextPaymentAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Total Amount</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Service.TotalAmount, new { htmlAttributes = new { @class = "form-control", @id = "ServicePrice", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @id = "Quantity", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discounts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discounts, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Security Deposit</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityDeposit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "SecurityDeposit" } })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Total Amount</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @id = "TotalAmount", @readonly = "readonly" } })

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Retail Store</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RetailStore.Name, new { htmlAttributes = new { @class = "form-control", @id = "TotalAmount", @readonly = "readonly" } })

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Service</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Service.Name, new { htmlAttributes = new { @class = "form-control", @id = "TotalAmount", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Service Package</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServicePackage.Name, new { htmlAttributes = new { @class = "form-control", @id = "TotalAmount", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AcceptedBy, "Accepted by", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcceptedBy, new { htmlAttributes = new { @class = "form-control", @id = "TotalAmount", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">

                Amount each period
            </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" value="@numberOfBillingEachYear" id="numberOfBillingEachYear" />

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">

                Billing Date
            </label>
            <div class="col-md-10">
                <select class="form-control" id="billingDate">
                    @foreach (var billingDate in ViewBag.DateToExportBill)
                    {
                        <option>@billingDate</option>
                    }
                </select>
            </div>
        </div>

        <div>
            <div class="col-md-offset-2">
                <input type="submit" class="btn btn-default" id="createBilling" value="Billing">
            </div>
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>
    <div class="col-7">
        <table class="table">
            <tr>
                <th>No</th>
                <th>CreatedAt</th>
                <th>BillingAmount</th>
                <th></th>
            </tr>
            @foreach (var billing in Model.Billings)
            {
                <tr>
                    <td>@billing.Id</td>
                    <td>@billing.CreatedAt</td>
                    <td>@billing.BillingAmount</td>
                    <td>
                        @Html.ActionLink("Details", "Details", "Billings", new { id = billing.Id },null) |
                        @Html.ActionLink("Delete", "Delete", "Billings", new { id = billing.Id },null)
                    </td>
                </tr>
            }
        </table>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        var data;
        function myFunction() {
            window.print();
            window.onafterprint = function () {
               console.log("Printing completed...");
            }
        }

        $(document).on('click', '#createBilling', function (e) {
            data = {
                ContractId: $('#contractId').val(),
                BillingAmount: $('#numberOfBillingEachYear').val(),
                CreatedAt: $('#billingDate').val(),
            }
            CallAjaxForCreateBilling();
        })
        
        function CallAjaxForCreateBilling() {
                $.ajax({
                url: '/Billings/CreateBilling',
                type: 'POST',
                data: data,
                success: function (response) {
                    alert('Create billing successfully');
                    location.reload();
                }
            });
        }
    </script>
}