@model NexusCommunicationSystem.Models.Contract

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contract</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderStatus,"Order Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.OrderStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAt,"Created At", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedAt,"Updated At", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.NextPaymentAt,"Next Payment At", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NextPaymentAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NextPaymentAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RetailStoreId, "RetailStore", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RetailStoreId", null, htmlAttributes: new { @class = "form-control", @id = "RetailStoreId" })
                @Html.ValidationMessageFor(model => model.RetailStoreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceId, "Service", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceId", null, htmlAttributes: new { @class = "form-control", @id = "ServiceId" })
                @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Service.TotalAmount, "Service Price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Service.TotalAmount, new { htmlAttributes = new { @class = "form-control", @id = "ServicePrice", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServicePackageId, "Service Package", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServicePackageId", null, htmlAttributes: new { @class = "form-control", @id = "ServicePackageId" })
                @Html.ValidationMessageFor(model => model.ServicePackageId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @id = "Quantity" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discounts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discounts, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Discounts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecurityDeposit,"Security Deposit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityDeposit, new { htmlAttributes = new { @class = "form-control",  @readonly = "readonly", @id = "SecurityDeposit" } })
                @Html.ValidationMessageFor(model => model.SecurityDeposit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAmount,"Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @id = "TotalAmount", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var data;
        var serviceId;

        $(document).ready(function () {
            data = {
                ServiceId: $('#ServiceId').val(),
                ServicePackageId: $('#ServicePackageId').val(),
                Quantity: $('#Quantity').val(),
                Discounts: $('#Discounts').val(),
                SecurityDeposit: $('#SecurityDeposit').val().toString(),

            }

            serviceId = {
                ServiceId: $('#ServiceId').val(),
            }

            TakeTotalAmountFromService();
            CallAjaxForCalculation();
        })

        $(document).on('change', '#ServiceId', function (e) {
            data = {
                ServiceId: $('#ServiceId').val(),
                ServicePackageId: $('#ServicePackageId').val(),
                Quantity: $('#Quantity').val(),
                Discounts: $('#Discounts').val(),
                SecurityDeposit: $('#SecurityDeposit').val(),

            }

            serviceId = {
                ServiceId: $('#ServiceId').val(),
            }

            TakeTotalAmountFromService();
            CallAjaxForCalculation();

        })

        $(document).on('change', '#ServicePackageId', function (e) {
            data = {
                ServiceId: $('#ServiceId').val(),
                ServicePackageId: $('#ServicePackageId').val(),
                Quantity: $('#Quantity').val(),
                Discounts: $('#Discounts').val(),
                SecurityDeposit: $('#SecurityDeposit').val(),
            }
            console.log(data);

            CallAjaxForCalculation();
        })

        $(document).on('change', '#Quantity', function (e) {
            data = {
                ServiceId: $('#ServiceId').val(),
                ServicePackageId: $('#ServicePackageId').val(),
                Quantity: $('#Quantity').val(),
                Discounts: $('#Discounts').val(),
                SecurityDeposit: $('#SecurityDeposit').val(),
            }
            console.log(data);
            CallAjaxForCalculation();
        })

        function CallAjaxForCalculation() {
                $.ajax({
                url: '/Contracts/CalculateContractValue',
                type: 'POST',
                data: data,
                success: function (response) {
                    $('#TotalAmount').val(response);
                    return response;
                }
            });
        }

        function TakeTotalAmountFromService() {
            $.ajax({
                url: '/Contracts/GetServiceTotalAmount',
                type: 'POST',
                data: serviceId,
                success: function (response) {
                    $('#ServicePrice').val(response);
                    return response;
                }
            });
        }

    </script>
}

